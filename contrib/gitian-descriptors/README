Vertoes's notes on getting gitian builds up and running using LXC:

If your main machine is a 64-bit Mac or PC with a few gigabytes of memory
and at least 10 gigabytes of free disk space, you can gitian-build using
LXC running inside a virtual machine.

Here's a description of Gavin's setup on OSX 10.6:

1. Download and install VirtualBox from https://www.virtualbox.org/

2. Download the 64-bit Ubuntu Desktop 12.04 LTS .iso CD image from
  http://www.ubuntu.com/

3. Run VirtualBox and create a new virtual machine, using the
  Ubuntu .iso (see the VirtualBox documentation for details).
  Create it with at least 2 gigabytes of memory and a disk
  that is at least 20 gigabytes big.

4. Inside the running Ubuntu desktop, install:
  sudo apt-get install debootstrap lxc ruby apache2 git apt-cacher-ng python-vm-builder

5. Still inside Ubuntu, tell gitian-builder to use LXC.

Once you've got the right hardware and software:

    export VERSION=0.7.6
    export USE_LXC=1

    git clone git://github.com/vertoe/cachecoin.git
    git clone git://github.com/devrandom/gitian-builder.git
    mkdir gitian-builder/inputs
    cd gitian-builder/inputs

    # Download inputs:
    wget -O miniupnpc-1.6.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.6.tar.gz'
    wget -O miniupnpc-1.9.tar.gz 'http://miniupnp.tuxfamily.org/files/download.php?file=miniupnpc-1.9.tar.gz'
    wget 'http://fukuchi.org/works/qrencode/qrencode-3.2.0.tar.bz2'
    wget 'http://fukuchi.org/works/qrencode/qrencode-3.4.3.tar.bz2'
    wget 'https://github.com/google/protobuf/releases/download/v2.5.0/protobuf-2.5.0.tar.bz2'
    wget 'https://downloads.sourceforge.net/project/boost/boost/1.50.0/boost_1_50_0.tar.bz2'
    wget 'https://downloads.sourceforge.net/project/boost/boost/1.55.0/boost_1_55_0.tar.bz2'
    wget 'http://www.openssl.org/source/openssl-1.0.1m.tar.gz'
    wget 'http://www.openssl.org/source/openssl-1.0.2a.tar.gz'
    wget 'http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz'
    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.6/zlib-1.2.6.tar.gz'
    wget 'https://downloads.sourceforge.net/project/libpng/zlib/1.2.8/zlib-1.2.8.tar.gz'
    wget 'https://downloads.sourceforge.net/project/libpng/libpng16/older-releases/1.6.8/libpng-1.6.8.tar.gz'
    wget 'https://download.qt.io/archive/qt/4.6/qt-everywhere-opensource-src-4.6.4.tar.gz'
    wget 'https://download.qt.io/archive/qt/4.8/4.8.3/qt-everywhere-opensource-src-4.8.3.tar.gz'
    wget 'https://download.qt.io/archive/qt/4.8/4.8.5/qt-everywhere-opensource-src-4.8.5.tar.gz'
    wget 'http://mindstalk.net/host/boost-mingw-gas-cross-compile-2013-03-03.patch'
    wget 'https://github.com/mingwandroid/toolchain4/archive/10cc648683617cca8bcbeae507888099b41b530c.tar.gz'
    wget 'http://www.opensource.apple.com/tarballs/cctools/cctools-809.tar.gz'
    wget 'http://www.opensource.apple.com/tarballs/dyld/dyld-195.5.tar.gz'
    wget 'http://www.opensource.apple.com/tarballs/ld64/ld64-127.2.tar.gz'
    wget 'http://cdrkit.org/releases/cdrkit-1.1.11.tar.gz'
    wget 'https://github.com/theuni/libdmg-hfsplus/archive/libdmg-hfsplus-v0.1.tar.gz'
    wget -O clang-llvm-3.2-x86-linux-ubuntu-12.04.tar.gz 'http://llvm.org/releases/3.2/clang+llvm-3.2-x86-linux-ubuntu-12.04.tar.gz'
    wget 'http://download.qt-project.org/official_releases/qt/5.2/5.2.1/single/qt-everywhere-opensource-src-5.2.1.tar.gz'
    wget 'ftp://ftp.tw.freebsd.org/pub/FreeBSD/distfiles/cdrkit-1.1.11.tar.gz'
    cp ../../cachecoin/depends/patches/native_cdrkit/cdrkit-deterministic.patch ./
    cd ../..

    cd gitian-builder
    bin/make-base-vm --suite precise --arch i386 --lxc
    bin/make-base-vm --suite precise --arch amd64 --lxc
    cd ..

    # Build Linux dependencies: (only needs to be done once, or when dependency versions change)
    cd cachecoin
    git pull
    cd ../gitian-builder
    git pull
    ./bin/gbuild --commit cachecoin=HEAD ../cachecoin/contrib/gitian-descriptors/linux/gitian-linux-boost.yml
    mv ./build/out/boost-linux* ./inputs/
    ./bin/gbuild --commit cachecoin=HEAD ../cachecoin/contrib/gitian-descriptors/linux/gitian-linux-deps.yml
    mv ./build/out/cachecoin-deps-linux* ./inputs/
    ./bin/gbuild --commit cachecoin=HEAD ../cachecoin/contrib/gitian-descriptors/linux/gitian-linux-qt.yml
    mv ./build/out/qt-linux* ./inputs/

    # Build Linux release:
    ./bin/gbuild --commit cachecoin=${VERSION} ../cachecoin/contrib/gitian-descriptors/linux/gitian-linux-cachecoin.yml

    # Build Windows dependencies: (only needs to be done once, or when dependency versions change)
    ./bin/gbuild --commit cachecoin=HEAD ../cachecoin/contrib/gitian-descriptors/win32-old/boost-win32-old.yml
    mv ./build/out/boost-win* ./inputs/
    ./bin/gbuild --commit cachecoin=HEAD ../cachecoin/contrib/gitian-descriptors/win32-old/qt-win32-old.yml
    mv ./build/out/qt-win* ./inputs/
    ./bin/gbuild --commit cachecoin=HEAD ../cachecoin/contrib/gitian-descriptors/win32-old/deps-win32-old.yml
    mv ./build/out/cachecoin-deps-* ./inputs/

    # Build Windows release:
    ./bin/gbuild --commit cachecoin=${VERSION} ../cachecoin/contrib/gitian-descriptors/win32-old/gitian-win32-old.yml

    # Build MacOS dependencies: (only needs to be done once, or when dependency versions change)
    @TODO

    # Build MacOS release:
    @TODO

gitian-builder now also supports building using LXC. See
  https://help.ubuntu.com/12.04/serverguide/lxc.html
... for how to get LXC up and running under Ubuntu.

MacOSX10.9.sdk can be extracted using a mac:

    tar -C /Volumes/Xcode/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/ -czf MacOSX10.9.sdk.tar.gz MacOSX10.9.sdk
